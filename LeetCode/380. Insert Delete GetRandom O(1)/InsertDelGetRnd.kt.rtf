{\rtf1\ansi\ansicpg949\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red30\green30\blue30;\red202\green202\blue202;
\red67\green192\blue160;\red212\green214\blue154;\red183\green111\blue179;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c15686\c15686\c15686;\cssrgb\c83137\c83137\c83137;
\cssrgb\c30588\c78824\c69020;\cssrgb\c86275\c86275\c66667;\cssrgb\c77255\c52549\c75294;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 RandomizedSet\cf4 \strokec4 () \{\cb1 \
\cb3     \cf2 \strokec2 val\cf4 \strokec4  randomSet:\cf5 \strokec5 MutableSet\cf4 \strokec4 <\cf5 \strokec5 Int\cf4 \strokec4 > = \cf6 \strokec6 mutableSetOf\cf4 \strokec4 ()\cb1 \
\cb3     \cf2 \strokec2 fun\cf4 \strokec4  \cf6 \strokec6 insert\cf4 \strokec4 (`\cf2 \strokec2 val\cf4 \strokec4 `: \cf5 \strokec5 Int\cf4 \strokec4 ): \cf5 \strokec5 Boolean\cf4 \strokec4  \{\cb1 \
\cb3         \cf7 \strokec7 return\cf4 \strokec4  randomSet.add(`\cf2 \strokec2 val\cf4 \strokec4 `)\cb1 \
\
\cb3     \}\cb1 \
\
\cb3     \cf2 \strokec2 fun\cf4 \strokec4  \cf6 \strokec6 remove\cf4 \strokec4 (`\cf2 \strokec2 val\cf4 \strokec4 `: \cf5 \strokec5 Int\cf4 \strokec4 ): \cf5 \strokec5 Boolean\cf4 \strokec4  \{\cb1 \
\cb3             \cf7 \strokec7 return\cf4 \strokec4  randomSet.remove(`\cf2 \strokec2 val\cf4 \strokec4 `)\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf2 \strokec2 fun\cf4 \strokec4  \cf6 \strokec6 getRandom\cf4 \strokec4 (): \cf5 \strokec5 Int\cf4 \strokec4  \{\cb1 \
\cb3         \cf7 \strokec7 return\cf4 \strokec4  randomSet.random()\cb1 \
\cb3     \}\cb1 \
\
\cb3 \}\cb1 \
}